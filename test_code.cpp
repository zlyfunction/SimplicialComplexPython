TEST_CASE("link_circle", "[simplicial_complex][link][2D]")
{
    RowVectors3d V;
    RowVectors3l F;
    std::string name = "/circle.obj";
    std::string path;
    path.append(WMTK_DATA_DIR);
    path.append(name);
    igl::read_triangle_mesh(path, V, F);
    tests::DEBUG_TriMesh m;
    m.initialize(F);

    Tuple t;
    std::vector<std::vector<long>> sc_v;
    t = m.tuple_from_id(PV, 1827);
    sc_v = get_sorted_sc(m, SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 1819);
    CHECK(sc_v[1][0] == 1820);
    CHECK(sc_v[2][0] == 1826);
    CHECK(sc_v[3][0] == 1828);
    CHECK(sc_v[4][0] == 1835);
    CHECK(sc_v[5][0] == 1836);
    CHECK(sc_v[6][0] == 1819);
    CHECK(sc_v[6][1] == 1820);
    CHECK(sc_v[7][0] == 1819);
    CHECK(sc_v[7][1] == 1826);
    CHECK(sc_v[8][0] == 1820);
    CHECK(sc_v[8][1] == 1828);
    CHECK(sc_v[9][0] == 1826);
    CHECK(sc_v[9][1] == 1835);
    CHECK(sc_v[10][0] == 1828);
    CHECK(sc_v[10][1] == 1836);
    CHECK(sc_v[11][0] == 1835);
    CHECK(sc_v[11][1] == 1836);

    t = m.tuple_from_id(PV, 4166);
    sc_v = get_sorted_sc(m, SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 4139);
    CHECK(sc_v[1][0] == 4140);
    CHECK(sc_v[2][0] == 4165);
    CHECK(sc_v[3][0] == 4167);
    CHECK(sc_v[4][0] == 4193);
    CHECK(sc_v[5][0] == 4194);
    CHECK(sc_v[6][0] == 4139);
    CHECK(sc_v[6][1] == 4140);
    CHECK(sc_v[7][0] == 4139);
    CHECK(sc_v[7][1] == 4165);
    CHECK(sc_v[8][0] == 4140);
    CHECK(sc_v[8][1] == 4167);
    CHECK(sc_v[9][0] == 4165);
    CHECK(sc_v[9][1] == 4193);
    CHECK(sc_v[10][0] == 4167);
    CHECK(sc_v[10][1] == 4194);
    CHECK(sc_v[11][0] == 4193);
    CHECK(sc_v[11][1] == 4194);

    t = m.tuple_from_id(PV, 3789);
    sc_v = get_sorted_sc(m, SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 213);
    CHECK(sc_v[1][0] == 214);
    CHECK(sc_v[2][0] == 3759);
    CHECK(sc_v[3][0] == 3760);
    CHECK(sc_v[4][0] == 3788);
    CHECK(sc_v[5][0] == 3790);
    CHECK(sc_v[6][0] == 213);
    CHECK(sc_v[6][1] == 214);
    CHECK(sc_v[7][0] == 213);
    CHECK(sc_v[7][1] == 3790);
    CHECK(sc_v[8][0] == 214);
    CHECK(sc_v[8][1] == 3788);
    CHECK(sc_v[9][0] == 3759);
    CHECK(sc_v[9][1] == 3760);
    CHECK(sc_v[10][0] == 3759);
    CHECK(sc_v[10][1] == 3788);
    CHECK(sc_v[11][0] == 3760);
    CHECK(sc_v[11][1] == 3790);

    t = m.tuple_from_id(PV, 2173);
    sc_v = get_sorted_sc(m, SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 2167);
    CHECK(sc_v[1][0] == 2168);
    CHECK(sc_v[2][0] == 2172);
    CHECK(sc_v[3][0] == 2174);
    CHECK(sc_v[4][0] == 2179);
    CHECK(sc_v[5][0] == 2180);
    CHECK(sc_v[6][0] == 2167);
    CHECK(sc_v[6][1] == 2168);
    CHECK(sc_v[7][0] == 2167);
    CHECK(sc_v[7][1] == 2172);
    CHECK(sc_v[8][0] == 2168);
    CHECK(sc_v[8][1] == 2174);
    CHECK(sc_v[9][0] == 2172);
    CHECK(sc_v[9][1] == 2179);
    CHECK(sc_v[10][0] == 2174);
    CHECK(sc_v[10][1] == 2180);
    CHECK(sc_v[11][0] == 2179);
    CHECK(sc_v[11][1] == 2180);

    t = m.tuple_from_id(PV, 1781);
    sc_v = get_sorted_sc(m, SimplicialComplex::link(m, Simplex(PV, t)).get_simplex_vector());
    REQUIRE(sc_v.size() == 12);
    CHECK(sc_v[0][0] == 52);
    CHECK(sc_v[1][0] == 53);
    CHECK(sc_v[2][0] == 1765);
    CHECK(sc_v[3][0] == 1766);
    CHECK(sc_v[4][0] == 1780);
    CHECK(sc_v[5][0] == 1782);
    CHECK(sc_v[6][0] == 52);
    CHECK(sc_v[6][1] == 53);
    CHECK(sc_v[7][0] == 52);
    CHECK(sc_v[7][1] == 1782);
    CHECK(sc_v[8][0] == 53);
    CHECK(sc_v[8][1] == 1780);
    CHECK(sc_v[9][0] == 1765);
    CHECK(sc_v[9][1] == 1766);
    CHECK(sc_v[10][0] == 1765);
    CHECK(sc_v[10][1] == 1780);
    CHECK(sc_v[11][0] == 1766);
    CHECK(sc_v[11][1] == 1782);

}
